apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: prod
  labels:
    app: frontend
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 75%
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - env:
        - name: BACKEND_HOST
          value: backend
        - name: BACKEND_PORT
          value: "80"
        image: smash1986/frontend:latest
        name: frontend
        ports:
        - containerPort: 8082
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: prod
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8082
  selector:
    app: frontend
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    annotations:
        kubernetes.io.ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        cert-manager.io/cluster-issuer: letsencrypt-production
    name: frontend
    namespace: prod
spec:
    tls:
    - hosts:
      - prod.smash1986.ml
      secretName: letsencrypt-production-api
    rules:
    - host: prod.smash1986.ml
      http:
        paths:
        - path: /
          backend:
              serviceName: frontend
              servicePort: 80

